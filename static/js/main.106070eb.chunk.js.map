{"version":3,"sources":["Img/mercadolivre.png","services/api.js","components/CategoryFilter.js","components/AddToCart.js","components/ProductCard.js","components/ListItems.js","pages/Main.js","components/ShowAddToCart.js","pages/ShoppingCart.js","components/Form/Rating.js","components/Form/Form.js","pages/ProductDetails.js","components/Data.js","components/Formulario.js","pages/Checkout.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getCategories","a","fetch","fetchCategories","json","getProductsFromCategoryAndQuery","categoryId","query","fetchCategoryQuery","CategoryFilter","state","categoryList","sendId","bind","this","fetchCategoryList","id","fetchAPI","props","api","dataCategories","setState","className","map","name","onClick","data-testid","key","Component","AddToCart","addItem","cart","item","localStorage","getItem","JSON","parse","push","setItem","stringify","classId","type","ProductCard","itemId","to","pathname","itemCard","title","src","thumbnail","alt","price","ListItems","list","length","Main","category","input","response","results","changeState","handleSubmit","e","preventDefault","event","target","value","onSubmit","onChange","placeholder","ShowAddToCart","qtdeProduct","values","index","itemValues","redirect","qtd","subtotal","arrValues","index2","reduce","acc","arrQtdeProduct","updateValues","array","removed","forEach","object","window","location","reload","removeProduct","width","decreaseProductQuantify","increaseProductQuantify","addValueByQuantify","renderCart","addTotalCartValue","ShoppingCart","empityMessage","Rating","checkStart","setStarCount","parseInt","stars","document","querySelectorAll","i","classList","remove","off","add","light","htmlFor","Form","React","useState","email","setEmail","text","setText","split","emailContent","sendEmailContent","textContent","sendTextContent","star","setStar","starContent","sendStarContent","sendText","getElementById","checkTextElem","required","onBlur","textElem","elem","starsComment","ProductDetails","estados","Formulario","compreMais","clear","method","uf","Checkout","totValue","element","b","Header","mercadolivre","App","exact","path","render","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.106070eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mercadolivre.5cb1cb3e.png\";","export async function getCategories() {\n  const fetchCategories = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  return fetchCategories.json();\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const fetchCategoryQuery = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n  return fetchCategoryQuery.json();\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\nimport './CategoryFilter.css';\n\nclass CategoryFilter extends Component {\n  constructor() {\n    super();\n    this.state = { categoryList: [] };\n    this.sendId = this.sendId.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCategoryList();\n  }\n\n  sendId(id) {\n    const { fetchAPI } = this.props;\n    fetchAPI(id);\n  }\n\n  async fetchCategoryList() {\n    const dataCategories = await api.getCategories();\n    this.setState({ categoryList: dataCategories });\n  }\n\n  render() {\n    const { categoryList } = this.state;\n    return (\n      <nav className=\"side-nav\">\n        <aside>\n          {categoryList.map(({ name, id }) => (\n            <option\n              onClick={ () => this.sendId(id) }\n              data-testid=\"category\"\n              key={ id }\n              className=\"side-nav-option\"\n            >\n              {name}\n            </option>\n          ))}\n        </aside>\n      </nav>\n    );\n  }\n}\n\nCategoryFilter.propTypes = { fetchAPI: PropTypes.func.isRequired };\n\nexport default CategoryFilter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './ProductCard.css';\n\nexport default class AddToCart extends Component {\n  constructor(props) {\n    super(props);\n    this.addItem = this.addItem.bind(this);\n  }\n\n  addItem = () => {\n    let cart = [];\n    const { item } = this.props;\n    if (localStorage.getItem('item') !== null) {\n      cart = JSON.parse(localStorage.getItem('item'));\n      cart.push(item);\n    } else {\n      cart.push(item);\n    }\n    localStorage.setItem('item', JSON.stringify(cart));\n  }\n\n  render() {\n    const { classId } = this.props;\n    return (\n      <button\n        type=\"button\"\n        data-testid={ classId }\n        onClick={ () => this.addItem() }\n        className=\"card-add-to-cart\"\n      >\n        Adicionar ao Carrinho\n      </button>\n    );\n  }\n}\n\nAddToCart.propTypes = {\n  item: PropTypes.objectOf(PropTypes.any).isRequired,\n  classId: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport AddToCart from './AddToCart';\nimport './ProductCard.css';\n\nclass ProductCard extends Component {\n  render() {\n    const { item, itemId } = this.props;\n\n    return (\n      <div className=\"card-body\">\n        <Link\n          data-testid=\"product-detail-link\"\n          to={ { pathname: '/product-details', itemCard: item, itemId } }\n          className=\"card-link\"\n        >\n          <div data-testid=\"product\" className=\"card-upper\">\n            <h4 className=\"card-title\">{ item.title }</h4>\n            <img src={ item.thumbnail } alt=\"imágem do produto\" className=\"card-img\" />\n            <p className=\"card-price\">{ `R$ ${item.price}` }</p>\n          </div>\n        </Link>\n        <AddToCart item={ item } classId=\"product-add-to-cart\" />\n      </div>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  item: PropTypes.objectOf(PropTypes.any).isRequired,\n  itemId: PropTypes.string.isRequired,\n};\n\nexport default ProductCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ProductCard from './ProductCard';\nimport './ListItems.css';\n\nclass ListItems extends Component {\n  render() {\n    const { list } = this.props;\n\n    return (\n      <div className=\"main-product-list\">\n        {list.length === 0 ? <span>Nenhum produto foi encontrado</span>\n          : list.map((item) => (\n            <ProductCard item={ item } itemId={ item.id } key={ item.id } />\n          )) }\n      </div>\n\n    );\n  }\n}\n\nListItems.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default ListItems;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\nimport { FaSearch, FaShoppingCart } from 'react-icons/fa';\nimport CategoryFilter from '../components/CategoryFilter';\nimport ListItems from '../components/ListItems';\nimport * as api from '../services/api';\nimport './Main.css';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: '',\n      input: '',\n      list: [],\n    };\n    this.changeState = this.changeState.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  fetchAPI = async (id) => {\n    let { category } = this.state;\n    category = id;\n    const { input } = this.state;\n    const response = await api.getProductsFromCategoryAndQuery(category, input);\n    this.setState({\n      list: response.results,\n      category,\n    });\n  }\n\n  changeState(event) {\n    this.setState({\n      input: event.target.value,\n    });\n  }\n\n  render() {\n    const { input, list } = this.state;\n    return (\n      <div className=\"main-body\">\n        <CategoryFilter fetchAPI={ this.fetchAPI } className=\"side-category\" />\n        <div className=\"main-holder\">\n          <div className=\"main-header\">\n            <form onSubmit={ this.handleSubmit } className=\"main-header-form\">\n              <input\n                data-testid=\"query-input\"\n                type=\"text\"\n                value={ input }\n                onChange={ this.changeState }\n                placeholder=\"Digite algum termo de pesquisa ou escolha uma categoria.\"\n                className=\"search-input\"\n              />\n              <FaSearch\n                type=\"submit\"\n                data-testid=\"query-button\"\n                onClick={ this.fetchAPI }\n                className=\"search-btn\"\n              />\n            </form>\n            <Link\n              data-testid=\"shopping-cart-button\"\n              to=\"/shopping-cart\"\n              className=\"shopping-cart\"\n            >\n              <FaShoppingCart />\n            </Link>\n          </div>\n          <ListItems list={ list } />\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass ShowAddToCart extends Component {\n  constructor(props) {\n    super(props);\n\n    const cart = JSON.parse(localStorage.getItem('item'));\n    let qtdeProduct = [];\n    let values = [];\n    for (let index = 0; index < cart.length; index += 1) {\n      qtdeProduct = [...qtdeProduct, 1];\n      values = [...values, cart[index].price];\n    }\n    this.itemValues = this.itemValues.bind(this);\n\n    this.state = {\n      qtdeProduct,\n      cart,\n      values,\n      redirect: false,\n    };\n  }\n\n  itemValues() {\n    const { qtdeProduct, values } = this.state;\n    localStorage.setItem('qtd', JSON.stringify(qtdeProduct));\n    localStorage.setItem('totValue', JSON.stringify(values));\n    this.setState({ redirect: true });\n  }\n\n  addValueByQuantify(index) {\n    const { qtdeProduct, cart } = this.state;\n    const subtotal = qtdeProduct[index] * cart[index].price;\n    return subtotal;\n  }\n\n  updateValues(index, qtd) {\n    const { cart, values } = this.state;\n    const subtotal = qtd * cart[index].price;\n    let arrValues = [];\n    for (let index2 = 0; index2 < cart.length; index2 += 1) {\n      if (index2 === index) {\n        arrValues = [...arrValues, subtotal];\n      } else { arrValues = [...arrValues, values[index2]]; }\n    }\n    this.setState({ values: arrValues });\n  }\n\n  addTotalCartValue() {\n    const { values } = this.state;\n\n    return (\n      <div>\n        {`Valor total da compra: R$ ${values.reduce((acc, value) => acc + value)}`}\n      </div>\n    );\n  }\n\n  increaseProductQuantify(index) {\n    const { qtdeProduct } = this.state;\n    let arrQtdeProduct = [];\n    for (let index2 = 0; index2 < qtdeProduct.length; index2 += 1) {\n      if (index2 === index) {\n        arrQtdeProduct = [...arrQtdeProduct, qtdeProduct[index2] + 1];\n      } else { arrQtdeProduct = [...arrQtdeProduct, qtdeProduct[index2]]; }\n      this.setState({\n        qtdeProduct: arrQtdeProduct,\n      });\n      this.updateValues(index, arrQtdeProduct[index]);\n    }\n  }\n\n  decreaseProductQuantify(index) {\n    const { qtdeProduct } = this.state;\n    if (qtdeProduct[index] <= 1) return;\n    let arrQtdeProduct = [];\n    for (let index2 = 0; index2 < qtdeProduct.length; index2 += 1) {\n      if (index2 === index) {\n        arrQtdeProduct = [...arrQtdeProduct, qtdeProduct[index2] - 1];\n      } else { arrQtdeProduct = [...arrQtdeProduct, qtdeProduct[index2]]; }\n      this.setState({\n        qtdeProduct: arrQtdeProduct,\n      });\n      this.updateValues(index, arrQtdeProduct[index]);\n    }\n  }\n\n  removeProduct(index) {\n    const { cart } = this.state;\n    const array = JSON.parse(localStorage.getItem('item'));\n    const removed = [];\n    array.forEach((object) => {\n      if (object.id !== cart[index].id) {\n        removed.push(object);\n      }\n    });\n    localStorage.setItem('item', JSON.stringify(removed));\n    window.location.reload();\n  }\n\n  renderCart() {\n    const { qtdeProduct, cart } = this.state;\n    return cart.map((item, index) => (\n      <div key={ index }>\n        <button type=\"button\" onClick={ () => this.removeProduct(index) }>X</button>\n        <img src={ item.thumbnail } alt={ item.title } width=\"50px\" />\n        <span data-testid=\"shopping-cart-product-name\">{item.title}</span>\n        <button\n          data-testid=\"product-decrease-quantity\"\n          type=\"button\"\n          onClick={ () => this.decreaseProductQuantify(index) }\n        >\n          -\n        </button>\n        <span\n          data-testid=\"shopping-cart-product-quantity\"\n        >\n          {` ${qtdeProduct[index]} `}\n        </span>\n        <button\n          data-testid=\"product-increase-quantity\"\n          type=\"button\"\n          onClick={ () => this.increaseProductQuantify(index) }\n        >\n          +\n        </button>\n        <span>{`R$ ${this.addValueByQuantify(index)}`}</span>\n      </div>\n    ));\n  }\n\n  render() {\n    const { redirect } = this.state;\n    return (\n      <div>\n        {this.renderCart()}\n        {this.addTotalCartValue()}\n        <button\n          onClick={ () => this.itemValues() }\n          data-testid=\"checkout-products\"\n          type=\"submit\"\n        >\n          Finalizar compra\n        </button>\n        { redirect && <Redirect to=\"/checkout\" /> }\n      </div>\n    );\n  }\n}\n\nexport default ShowAddToCart;\n","import React, { Component } from 'react';\r\nimport ShowAddToCart from '../components/ShowAddToCart';\r\n\r\nexport default class ShoppingCart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let cart = [];\r\n    if (localStorage.getItem('item') !== null) {\r\n      cart = JSON.parse(localStorage.getItem('item'));\r\n    }\r\n    this.state = { cart };\r\n  }\r\n\r\n  empityMessage() {\r\n    return (\r\n      <p data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</p>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { cart } = this.state;\r\n    return (\r\n      <div>\r\n        { cart.length === 0 ? this.empityMessage() : <ShowAddToCart cart={ cart } /> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport { AiTwotoneStar } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\nimport './Form.css';\n\nconst Rating = (props) => {\n  const light = (id) => {\n    const stars = document.querySelectorAll('.star-font');\n    for (let i = 0; i < id - 1; i += 1) {\n      stars[i].classList.add('prev-star');\n    }\n  };\n\n  const off = () => {\n    const stars = document.querySelectorAll('.star-font');\n    for (let i = 0; i < stars.length; i += 1) {\n      stars[i].classList.remove('prev-star');\n    }\n  };\n\n  const checkStart = (e) => {\n    let id = 0;\n    props.setStarCount(e.target.id[4]);\n    id = parseInt(e.target.id[4], 10);\n    off();\n    light(id);\n  };\n\n  return (\n    <div className=\"rating\">\n      <label htmlFor=\"star1\" className=\"star-label\">\n        <input\n          type=\"radio\"\n          name=\"star\"\n          id=\"star1\"\n          onClick={ (e) => checkStart(e) }\n          className=\"star-input\"\n        />\n        <AiTwotoneStar className=\"star-font\" />\n      </label>\n      <label\n        htmlFor=\"star2\"\n        className=\"star-label\"\n      >\n        <input\n          type=\"radio\"\n          name=\"star\"\n          id=\"star2\"\n          onClick={ (e) => checkStart(e) }\n          className=\"star-input\"\n        />\n        <AiTwotoneStar className=\"star-font\" />\n      </label>\n      <label htmlFor=\"star3\" className=\"star-label\">\n        <input\n          type=\"radio\"\n          name=\"star\"\n          id=\"star3\"\n          onClick={ (e) => checkStart(e) }\n          className=\"star-input\"\n        />\n        <AiTwotoneStar className=\"star-font\" />\n      </label>\n      <label htmlFor=\"star4\" className=\"star-label\">\n        <input\n          type=\"radio\"\n          name=\"star\"\n          id=\"star4\"\n          onClick={ (e) => checkStart(e) }\n          className=\"star-input\"\n        />\n        <AiTwotoneStar className=\"star-font\" />\n      </label>\n      <label htmlFor=\"star5\" className=\"star-label\">\n        <input\n          type=\"radio\"\n          name=\"star\"\n          id=\"star5\"\n          onClick={ (e) => checkStart(e) }\n          className=\"star-input\"\n        />\n        <AiTwotoneStar className=\"star-font\" htmlFor=\"star5\" />\n      </label>\n    </div>\n  );\n};\n\nRating.propTypes = {\n  setStarCount: PropTypes.func.isRequired,\n};\n\nexport default Rating;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rating from './Rating';\nimport './Form.css';\n\nconst Form = (props) => {\n  const [email, setEmail] = React.useState([]);\n  const [text, setText] = React.useState([]);\n  const { itemId } = props;\n  const [emailContent, sendEmailContent] = React\n    .useState(\n      !localStorage[`${itemId}-email`] ? [] : localStorage.getItem(`${itemId}-email`)\n        .split(','),\n    );\n  const [textContent, sendTextContent] = React\n    .useState(\n      !localStorage[`${itemId}-text`] ? [] : localStorage.getItem(`${itemId}-text`)\n        .split(','),\n    );\n  const [star, setStar] = React.useState([]);\n  const [starContent, sendStarContent] = React.useState([]);\n\n  const sendStar = () => {\n    sendStarContent([...star]);\n  };\n\n  const sendText = () => {\n    sendTextContent([...text]);\n    sendStar();\n    localStorage\n      .setItem(\n        `${itemId}-text`, [...textContent, document.getElementById('text-area').value],\n      );\n  };\n\n  const saveEmail = (e) => {\n    setEmail([...email, e.target.value]);\n  };\n\n  const saveText = (e) => setText([...text, e.target.value]);\n  const saveTextEmpty = () => (\n    setText([...text, document.getElementById('text-area').value])\n  );\n\n  const saveStar = (id) => {\n    setStar([...star, id]);\n  };\n\n  const checkTextElem = () => {\n    const textElem = document.getElementById('text-area');\n    if (textElem.value === '') {\n      saveTextEmpty();\n    }\n  };\n\n  const sendEmail = () => {\n    const textElem = document.getElementById('text-area');\n    sendEmailContent([...email]);\n    checkTextElem();\n    sendText();\n    localStorage\n      .setItem(\n        `${itemId}-email`, [...emailContent, document.getElementById('email').value],\n      );\n    textElem.value = '';\n    document.getElementById('email').value = '';\n  };\n\n  const starsComment = (stars) => {\n    const array = [];\n    for (let index = 1; index <= stars; index += 1) {\n      array.push('★');\n    }\n    return <span className=\"stars\">{array}</span>;\n  };\n\n  return (\n    <>\n      <form className=\"rate-form\">\n        <h3>Avalie o Produto:</h3>\n        <div className=\"email-rating\">\n          <label htmlFor=\"email\" className=\"email\">\n            <input\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"digite seu email\"\n              required\n              onBlur={ saveEmail }\n              className=\"email-input\"\n            />\n          </label>\n          <Rating setStarCount={ saveStar } />\n        </div>\n        <textarea\n          onBlur={ saveText }\n          className=\"text-area\"\n          id=\"text-area\"\n          placeholder=\"escreva aqui sua avaliaçao\"\n          data-testid=\"product-detail-evaluation\"\n        />\n        <button\n          type=\"button\"\n          onClick={ sendEmail }\n        >\n          Avaliar\n        </button>\n      </form>\n      <div className=\"content-container\">\n        <h3>Avaliações: </h3>\n        <div className=\"ratings\">\n          {emailContent.map((elem, index) => (\n            <div key={ elem } className=\"comment\">\n              <p>{elem}</p>\n              <p>\n                {starsComment(starContent[index])}\n              </p>\n              <p className=\"text-area\">{textContent[index]}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nForm.propTypes = {\n  itemId: PropTypes.string.isRequired,\n};\n\nexport default Form;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FaArrowLeft, FaShoppingCart } from 'react-icons/fa';\nimport AddToCart from '../components/AddToCart';\nimport Form from '../components/Form/Form';\nimport '../components/Form/Form.css';\nimport './ProductDetails.css';\n\nclass ProductDetails extends Component {\n  render() {\n    const { location: { itemCard, itemId } } = this.props;\n    const { title, price, thumbnail } = itemCard;\n    return (\n      <div className=\"details-body\">\n        <div className=\"details-header\">\n          <Link to=\"/\" className=\"details-header-back\">\n            <FaArrowLeft />\n          </Link>\n          <Link to=\"/shopping-cart\" className=\"details-header-cart\">\n            <FaShoppingCart />\n          </Link>\n        </div>\n        <div className=\"details-container\">\n          <div className=\"details-container-1\">\n            <h2\n              data-testid=\"product-detail-name\"\n              className=\"details-container-title\"\n            >\n              { `${title}` }\n            </h2>\n            <img\n              src={ thumbnail }\n              alt=\"Imagem do Produto\"\n              className=\"details-container-img\"\n            />\n          </div>\n          <div className=\"details-container-rigth\">\n            <div className=\"details-container-2\">\n              <h2>{ `R$ ${price}` }</h2>\n              <AddToCart\n                item={ itemCard }\n                classId=\"product-detail-add-to-cart\"\n              />\n            </div>\n            <div className=\"details-reviews\">\n              <ul>\n                <li>O produto é bom</li>\n                <li>O produto é bom demais</li>\n                <li>O produto é bão</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <Form itemId={ itemId } />\n      </div>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  location: PropTypes.shape({\n    itemCard: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      thumbnail: PropTypes.string.isRequired,\n    }).isRequired,\n    itemId: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default ProductDetails;\n","const estados = [\n  'AC - Acre',\n  'AL - Alagoas',\n  'AP - Amapá',\n  'AM - Amazonas',\n  'BA - Bahia',\n  'CE - Ceará',\n  'DF - Distrito Federal',\n  'ES - Espírito Santo',\n  'GO - Goías',\n  'MA - Maranhão',\n  'MT - Mato Grosso',\n  'MS - Mato Grosso do Sul',\n  'MG - Minas Gerais',\n  'PA - Pará',\n  'PB - Paraíba',\n  'PR - Paraná',\n  'PE - Pernambuco',\n  'PI - Piauí',\n  'RJ - Rio de Janeiro',\n  'RN - Rio Grande do Norte',\n  'RS - Rio Grande do Sul',\n  'RO - Rondônia',\n  'RR - Roraíma',\n  'SC - Santa Catarina',\n  'SP - São Paulo',\n  'SE - Sergipe',\n  'TO - Tocantins',\n];\n\nexport default estados;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport estados from './Data';\n\nexport default class Formulario extends Component {\n  // função mascaraTelefone foi retirado de pesquisa no Stack Overflow\n  // mascaraTelefone(valor) {\n  //   const tel = document.getElementById('tel');\n  //   valor = valor.replace(/\\D/g, '');\n  //   valor = valor.replace(/^(\\d{2})(\\d)/g, '($1) $2');\n  //   valor = valor.replace(/(\\d)(\\d{4})$/, '$1-$2');\n  //   tel.value = valor;\n  // }\n  constructor() {\n    super();\n    this.state = { redirect: false };\n    this.compreMais = this.compreMais.bind(this);\n  }\n\n  compreMais() {\n    localStorage.clear();\n    this.setState({ redirect: true });\n  }\n\n  render() {\n    const { redirect } = this.state;\n    return (\n      <form method=\"get\" onSubmit={ this.compreMais }>\n        <h3>Informações do Comprador</h3>\n        <div>\n          <input\n            data-testid=\"checkout-fullname\"\n            type=\"text\"\n            placeholder=\"Nome Completo\"\n            name=\"id-cliente\"\n            required\n          />\n          <input\n            data-testid=\"checkout-cpf\"\n            type=\"text\"\n            placeholder=\"CPF\"\n            name=\"id-cliente\"\n            required\n          />\n          <input\n            data-testid=\"checkout-email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"id-cliente\"\n            required\n          />\n          <input\n            data-testid=\"checkout-phone\"\n            // onChange={ (e) => this.mascaraTelefone(e.target.value) }\n            // onKeyPress={ (e) => this.mascaraTelefone(e.target.value) }\n            type=\"tel\"\n            placeholder=\"Telefone\"\n            name=\"id-cliente\"\n            id=\"tel\"\n            required\n          />\n        </div>\n        <div>\n          <input\n            data-testid=\"checkout-cep\"\n            type=\"text\"\n            placeholder=\"CEP\"\n            name=\"endereço\"\n            required\n          />\n          <input\n            data-testid=\"checkout-address\"\n            type=\"text\"\n            placeholder=\"Endereço\"\n            name=\"endereço\"\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Complemento\"\n            name=\"endereço\"\n            required\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Numero\"\n            name=\"endereço\"\n            required\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Cidade\"\n            name=\"endereço\"\n            required\n          />\n          <select name=\"endereço\" placeholder=\"Estado\" required>\n            <option value=\"\">Estados</option>\n            { estados.map((uf) => <option key={ uf } value={ uf }>{ uf }</option>) }\n          </select>\n          <section>\n            <h3>Método de Pagamento</h3>\n            <label htmlFor=\"boleto\">\n              Boleto\n              <input\n                type=\"radio\"\n                id=\"boleto\"\n                value=\"boleto\"\n                name=\"forma-pagamento\"\n                required\n              />\n            </label>\n            <label htmlFor=\"master\">\n              Master\n              <input\n                type=\"radio\"\n                id=\"master\"\n                value=\"master\"\n                name=\"forma-pagamento\"\n              />\n            </label>\n            <label htmlFor=\"visa\">\n              Visa\n              <input\n                type=\"radio\"\n                id=\"visa\"\n                value=\"visa\"\n                name=\"forma-pagamento\"\n              />\n            </label>\n            <label htmlFor=\"elo\">\n              Elo\n              <input\n                type=\"radio\"\n                id=\"elo\"\n                value=\"elo\"\n                name=\"forma-pagamento\"\n              />\n            </label>\n          </section>\n          <button type=\"submit\">Comprar</button>\n          { redirect && <Redirect to=\"/\" /> }\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Formulario from '../components/Formulario';\n\nclass Checkout extends Component {\n  constructor() {\n    super();\n    const item = JSON.parse(localStorage.getItem('item'));\n    const totValue = JSON.parse(localStorage.getItem('totValue'));\n    this.state = { item, totValue };\n  }\n\n  renderCart() {\n    const { item, totValue } = this.state;\n    return item.map((element, index) => (\n      <div key={ element.id }>\n        <img src={ element.thumbnail } alt={ element.title } width=\"50px\" />\n        <span data-testid=\"shopping-cart-product-name\">{element.title}</span>\n        <span>\n          { ` - R$${totValue[index]}` }\n        </span>\n      </div>\n    ));\n  }\n\n  render() {\n    const { totValue } = this.state;\n    return (\n      <div>\n        <section>\n          <h3>Revise seus pedidos.</h3>\n          { this.renderCart() }\n          <h2>{ `Total: R$${totValue.reduce((a, b) => a + b)}` }</h2>\n        </section>\n        <div>\n          Alguma coisa\n          <Formulario />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Checkout;\n","import React, { Component } from 'react';\nimport mercadolivre from '../Img/mercadolivre.png';\nimport './Header.css';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <img src={ mercadolivre } alt=\"logo mercadolivre\" className=\"header-img\" />\n        <div className=\"header-title\">\n          <h1 className=\"header-h1\">Mercado Fake</h1>\n          <p className=\"header-p\">A loja do grupo 26</p>\n        </div>\n      </header>\n\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Main from './pages/Main';\nimport ShoppingCart from './pages/ShoppingCart';\nimport ProductDetails from './pages/ProductDetails';\nimport Checkout from './pages/Checkout';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" render={ (props) => <Main { ...props } /> } />\n        <Route path=\"/category/:id\" render={ (props) => <Main { ...props } /> } />\n        <Route exact path=\"/shopping-cart\" render={ (props) => <ShoppingCart { ...props } /> } />\n        <Route exact path=\"/product-details\" render={ (props) => <ProductDetails { ...props } /> } />\n        <Route exact path=\"/checkout\" render={ (props) => <Checkout { ...props } /> } />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}